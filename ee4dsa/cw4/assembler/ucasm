#!/usr/bin/env node

var lazy = require('lazy');
var fs  = require('fs');

var argv = require('optimist')
    .usage('Usage: $0 <assembly source>')
    .wrap(80)
    .demand('input')
    .option('input', {
      alias: 'i',
      desc: 'Input source path'
    })
    .option('output', {
      alias: 'o',
      default: 'a.out',
      desc: 'Set the destination path'
    })
    .option('size', {
      alias: 's',
      default: 4096,
      desc: 'Set the size of the output RAM'
    })
    .option('idt', {
      alias: 'd',
      default: 8,
      desc: 'Set the size of the interrupt descriptor table'
    }).argv;

/* Import the assembly routines */
eval(fs.readFileSync('ee4dsa-util.js') + '');
eval(fs.readFileSync('ee4dsa-assembler.js') + '');

/* Open and read input file */
fs.readFile(argv.input, function (err, data) {
  if (err) {
    process.stderr.write('Unable to read file "' + argv.input + '"\n');
    process.exit(2);
  }

  assemble(data.toString(), {
    size: argv.size,
    idtSize: argv.idt
  }, function(err, data) {
    if (err) {
      process.stderr.write('fatal: ' + err + '\n');
      process.exit(2);
    }

    /* Write assembled output to file */
    fs.writeFile(argv.output, data, function(err) {
      if(err) {
        process.stderr.write('Unable to write file "' + argv.output + '"\n');
        process.exit(3);
      }
    });
  });
});
